name: regressions

on: [ workflow_dispatch, pull_request, push ]

jobs:
    calculate-base-commit:
        runs-on: ubuntu-18.04
        outputs:
            base-commit: ${{ steps.base-commit.outputs.base-commit }}
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            # In case of `workflow_dispatch` event, `github.sha` points to latest commit of chosen branch
            # So, we need to find the latest common commit for master branch and chosen one
            # to calculate difference only for branch changes
            - name: Calculate base commit for workflow_dispatch event
              if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
              run: echo "BASE_COMMIT=$(git merge-base origin/master ${{ github.sha }})" >> $GITHUB_ENV

            # For pull request event, GitHub produces additional merge commit with `master` branch and PR branch as parents
            # In this case, we want to check difference between master branch and merge commit
            # so emit hash of `origin/master` branch itself as base commit
            - name: Calculate base commit for pull_request event
              if: github.event_name == 'pull_request'
              run: echo "BASE_COMMIT=$(git rev-parse origin/master)" >> $GITHUB_ENV

            - name: Emit base commit
              id: base-commit
              run: echo "::set-output name=base-commit::$BASE_COMMIT"

            - name: Show commits
              run: |
                  echo "current commit:"
                  git log ${{ github.sha }} -n 1 --pretty=short
                  echo "base commit:"
                  git log ${{ steps.base-commit.outputs.base-commit }} -n 1 --pretty=short

    check:
        needs: [ calculate-base-commit ]
        name: ${{ matrix.batch.name }}
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                batch:
                    - name: regressions-cargo
                      projects:
                          - name: cargo
                            path: cargo
                            repository: rust-lang/cargo
                    - name: regressions-mysql_async
                      projects:
                          - name: mysql_async
                            path: mysql_async
                            repository: blackbeam/mysql_async
                    - name: regressions-tokio
                      projects:
                          - name: tokio
                            path: tokio
                            repository: tokio-rs/tokio
                    - name: regressions-amethyst
                      projects:
                          - name: amethyst
                            path: amethyst
                            repository: amethyst/amethyst
                            include:
                                - .sentry_dsn.txt
                    - name: regressions-clap
                      projects:
                          - name: clap
                            path: clap
                            repository: clap-rs/clap
                    - name: regressions-diesel
                      projects:
                          - name: diesel
                            path: diesel
                            repository: diesel-rs/diesel
                            exclude:
                                - rust-toolchain
                    - name: regressions-rust-analyzer
                      projects:
                          - name: rust-analyzer
                            path: rust-analyzer
                            repository: rust-analyzer/rust-analyzer
                    - name: regressions-xi-editor
                      projects:
                          - name: xi-editor
                            path: xi-editor/rust
                            repository: xi-editor/xi-editor
                    - name: regressions-juniper
                      projects:
                          - name: juniper
                            path: juniper
                            repository: graphql-rust/juniper
                    - name: regressions-rustc
                      projects:
                          - name: rust
                            path: rust
                            repository: rust-lang/rust
                            exclude:
                                - src/llvm
                                - src/llvm-emscripten
                                - src/binaryen
                                - src/test
                                - src/ci
                                - src/rt
                                - src/compiler-rt
                                - src/jemalloc
                                - build
                                - tmp
                    - name: regressions-stdlib
                      projects:
                          - name: stdlib
        env:
            ORG_GRADLE_PROJECT_showStandardStreams: true
            PROJECTS: ${{ toJSON(matrix.batch.projects) }}
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: nightly-2021-04-13
                  components: rust-src
                  default: true

            - name: Checkout projects
              run: python scripts/fetch_projects.py --projects $'${{ toJSON(matrix.batch.projects) }}'

            - name: Download
              uses: eskatos/gradle-command-action@v1
              with:
                  arguments: ":resolveDependencies -Pkotlin.incremental=false"

            - name: Check with changes
              uses: eskatos/gradle-command-action@v1
              env:
                  RESULT_SUFFIX: _with_changes
              with:
                  arguments: "clean :test --tests \"org.rustPerformanceTests.CustomRealProjectAnalysisTest\""

            - name: Checkout base version
              run: git checkout ${{ needs.calculate-base-commit.outputs.base-commit }}

            - name: Check without changes
              uses: eskatos/gradle-command-action@v1
              env:
                  RESULT_SUFFIX: _without_changes
                  INTELLIJ_RUST_FORCE_USE_OLD_RESOLVE: 1
              with:
                  arguments: "clean :test --tests \"org.rustPerformanceTests.CustomRealProjectAnalysisTest\""

            - name: Checkout current version
              run: git checkout ${{ github.sha }}

            - name: Calculate regressions
              run: python scripts/calculate_regressions.py --projects $'${{ toJSON(matrix.batch.projects) }}'

            - name: Upload results
              if: ${{ always() }}
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ matrix.batch.name }}
                  path: regressions/
